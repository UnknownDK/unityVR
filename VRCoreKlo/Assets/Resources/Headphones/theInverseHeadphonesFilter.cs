using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System;

public class theInverseHeadphonesFilter : MonoBehaviour
{
    private static float[][] coefficients_a = new float[2][];
    private static float[][] coefficients_b = new float[2][];
        
    
    InverseHeadphones filterL;
    InverseHeadphones filterR;

    bool ready = false;

    // Start is called before the first frame update
    void Start()
    {
        coefficients_a[0] = new float[21] { 1f, 0.38803805712394f, -0.186929550995454f, -1.23078552269028f, -0.951125574435847f, 0.0308967968643057f, 0.716674951442862f, 0.797083443162647f, 0.235195444327719f, -0.228547034923144f, -0.436505520777069f, -0.281297664030366f, -0.148674227302036f, 0.148916035297637f, 0.225686209062112f, 0.122644826717187f, -0.0473700724980874f, -0.107125439067656f, 0.0465373214578265f, 0.0213184914626686f, 0.0559661667893307f};
        coefficients_a[1] = new float[21] { 1f, 0.449907250517389f, -0.604442341238365f, -0.750045091014245f, -0.209498995191065f, -0.266145299529322f, 0.240025514163012f, 0.257663150693486f, 0.27388465348575f, -0.102391326014252f, -0.154117779809253f, -0.0357953602840167f, -0.0436430528782147f, -0.131350069406088f, 0.0125356755918803f, 0.0178553652184246f, 0.0763290898529605f, 0.127792577937984f, 0.0140192123426648f, -0.00226147122167841f, 0.00786029213500566f};
        
        coefficients_b[0] = new float[21] { 1.12546052942368f,   0.0373412700522259f, -0.251049488550549f, -0.695671604451803f, -0.185393516781604f, 0.310712543735588f, -0.130411255904156f, -0.0399844685167336f, -0.150366795389144f, 0.180430089673127f, -0.0288102176223963f, 0.0894779453811662f, -0.123255121100175f, 0.0540507418231234f, -0.146702696817039f, 0.00357691779247797f, -0.0359710264511209f, 0.0323999762462122f, 0.119617844422402f, -0.0119305071520154f, 0.113125920078352f};
        coefficients_b[1] = new float[21] { 0.95412502807694f, 0.213159949151666f, -0.659977643071524f, -0.0168086346565848f, 0.120333525776629f, -0.194610234076022f, -0.010367759325184f, -0.146763710621058f, -0.0417476458946448f, 0.101721422272025f, -0.207486230047913f, 0.128595382538902f, -0.00178414256492194f, -0.102371089000032f, -0.0165107183977322f, 0.0165943230530362f, -0.0550826506432651f, -0.0377432761179905f, -0.0744660755715577f, 0.153462186646595f, 0.153158965728482f };
        
        filterL = new InverseHeadphones(coefficients_a[0], coefficients_b[0]);
        filterR = new InverseHeadphones(coefficients_a[1], coefficients_b[1]);

        filterL.Reset();
        filterR.Reset();   
        ready = true;   
    }

    // Update is called once per frame
    void Update()
    {

    }

    void OnAudioFilterRead(float[] data, int channels)
    {
        if(!ready)
            return;
        for(int i = 0; i < data.Length; i+=2)
        {
            data[i]     = filterL.ProcessSample(data[i]);
            data[i+1]   = filterR.ProcessSample(data[i+1]);
        }
    }
}
